test_sorted_loop(p) {
  let (v,nxt) = *p in {
  ifnull nxt then
    ()
  else {
    let (nxt_v,_) = *nxt in {
	  assert(v <= nxt_v);
	  test_sorted_loop(nxt)
	}
  };
  alias(nxt = (*p).1);
  }
}

insert_loop(x,p) {
  let (v,nxt) = *p in
  if v < x then {
    p := (v, nxt)
  } else {
	p := (x, mkref (v, nxt))
  }
}

{
  let g = _ in
  let p = mkref (g, null) in {
    insert_loop(_,p);
    insert_loop(_,p);
    insert_loop(_,p);
    test_sorted_loop(p)
  }
}
