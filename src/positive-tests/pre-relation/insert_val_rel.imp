insert_val(p,n) {
  let (x,y) = *p in
  if n < x then
    p := (n,x)
  else if n < y then
    p := (x,n)
  else ()
}

{
  let b = (_,_) in
  let p = mkref b in {
    $gamma {
      p: (~ <= $1 int, $1: T int) ref 1.0;
	  b: (T int, T int)
    };
	insert_val(p, _);
	let (x1,y2) = *p in
	assert(x1 <= y2)
  }
}
